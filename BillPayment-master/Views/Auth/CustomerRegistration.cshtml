@{
    ViewBag.Title = "CustomerRegistration";
}

@model BillPayment.Models.User

<section>
    <div class="container">
        <div class="row justify-content-center">
            @using (Html.BeginForm("CustomerRegistration", "Auth", FormMethod.Post))
            {
                <div class="col-12 col-md-8 col-lg-8 col-xl-6">
                    <div class="row">
                        <div class="col text-center">
                            <h1>Register</h1>
                            <p class="text-h3">
                                You're registering as an Customer. If you already have an account @Html.ActionLink("Click here to login", "CustomerLogin",
new { controller = "Auth" },
new { @class = "nav-link" })
                            </p>
                        </div>
                    </div>
                    @if (ViewBag.ResultCR == false)
                    {
                        <div class="alert alert-dismissible alert-danger">
                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                            <strong>Oh snap!! </strong>Failed! @ViewBag.errorCR
                        </div>
                    }
                    else if (ViewBag.ResultCR == true)
                    {
                        <div class="alert alert-dismissible alert-success">
                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                            <strong>Congratulations!</strong>&nbsp; New Customer created successfully
                        </div>

                    }
                    <center>
                        <img class="img-class custom-img-1" src="@Url.Content("~/Content/Images/registration.svg")" />
                    </center>
                    <div class="row align-items-center mt-4">


                        <div class="col">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", required = "required", type = "text", placeholder = "First Name", pattern = "[a-zA-Z]{2,}" })
                            <p class="was-validated-j">First name should contain only characters</p>

                        </div>
                        <div class="col">

                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", required = "required", type = "text", placeholder = "Last Name", pattern = "[A-Z][a-z]*" })
                            <p class="was-validated-j">Last name should contain only characters</p>
                        </div>


                    </div>

                    <div class="row align-items-center">
                        <div class="col mt-4">
                            @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", required = "required", type = "phone", placeholder = "Contact Number" })
                            <p class="was-validated-j">Please enter a 10 digit valid Phone number</p>
                        </div>
                    </div>




                    <fieldset>
                        <div class="some-class">
                            <p>Gender</p>
                            @Html.RadioButtonFor(m => m.Gender, "Male", new { @id = "male" })
                            <label for="male">Male</label>
                            @Html.RadioButtonFor(m => m.Gender, "Female", new { @id = "female" })
                            <label for="female">Female</label>
                        </div>
                    </fieldset>

                    <div class="row align-items-center">
                        <div class="col mt-4">
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", required = "required", type = "phone", placeholder = "Address" })
                        </div>
                    </div>


                    <div class="row align-items-center mt-4">


                        <div class="col">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", required = "required", type = "text", placeholder = "Username", pattern = "^[a-zA-Z]([._-]?[a-zA-Z0-9]+)*$" })
                            <p class="was-validated-j">Username should not start with number!</p>

                        </div>
                        <div class="col">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", required = "required", type = "password", placeholder = "Password", pattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$" })
                            <p class="was-validated-j">8-12 Char,1special,1Caps,1small</p>
                        </div>
                    </div>
                    <div class="row justify-content-end mt-4">
                        <div class="col form-btn">
                            <div class="spinner" style=font-size:16px></div>
                            <button type="submit" class="btn btn-primary">Register</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<script>
    $(document).ready(() => {
        $(".spinner").hide()

        $("form").submit(function () {
            $(".spinner").show()
            $("button").hide()

        });
    })
    if (@Html.Raw(Json.Encode(ViewBag.ResultCR))===false)
    {
        $(".spinner").hide()
        $("button").show()
    }


</script>
